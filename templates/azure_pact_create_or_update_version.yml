# TO TEST

# name: "create-or-update-version"
# description: "Create or update pacticipant version by version number"

parameters:
  - name: broker_url # "The url of your pact broker"
    default: ""
  - name: token # description: "Your pact broker token (required for PactFlow)"
    default: ""
  - name: username # description: "Your pact broker username"
    default: ""
  - name: password # description: "Your pact broker password"
    default: ""
  - name: application_name # "The name of your application (usually project name)"
    default: false
  - name: version # "The version of your application (defaults to version of the code where the action is run from)"
    default: ""
  - name: branch # "The repository branch name"
    default: ""
  - name: tag # "Tag name for pacticipant version."
    default: ""

steps:
- bash: |
    if [ -f $(build.sourcesdirectory)/azure-pipelines-templates/templates/scripts/createOrUpdateVersion.sh ]; then
      echo "##vso[task.setVariable variable=pact_templates_checked_out]true"
    else
      echo "##vso[task.setVariable variable=pact_templates_checked_out]false"
    else
      echo "##vso[task.setVariable variable=pact_templates_checked_out]false"
    fi
  displayName: check if pact_templates repo checked out
- checkout: pact_templates
  condition: eq(variables.pact_templates_checked_out, 'false')
- script: |
    $(build.sourcesdirectory)/azure-pipelines-templates/templates/scripts/createOrUpdateVersion.sh
  displayName: Create or Update Version
  env:
    PACT_BROKER_BASE_URL: ${{ coalesce(parameters.broker_url, variables.PACT_BROKER_BASE_URL) }}
    PACT_BROKER_TOKEN: ${{ coalesce(parameters.token, variables.PACT_BROKER_TOKEN) }}
    PACT_BROKER_USERNAME: ${{ coalesce(parameters.username, variables.PACT_BROKER_USERNAME) }}
    PACT_BROKER_PASSWORD: ${{ coalesce(parameters.password, variables.PACT_BROKER_PASSWORD) }}
    APPLICATION_NAME: ${{ coalesce(variables.APPLICATION_NAME, parameters.application_name ) }}
    COMMIT: ${{ coalesce(parameters.version, variables.COMMIT) }}
    BRANCH: ${{ coalesce(parameters.branch, variables.BRANCH) }}

